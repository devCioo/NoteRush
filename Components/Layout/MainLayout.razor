@using BitzArt.Blazor.Cookies
@inherits LayoutComponentBase
@inject ICookieService CookieService

<MudThemeProvider @bind-IsDarkMode="IsDarkMode" Theme="Theme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <NavBar OnMenuToggle="() => NavMenuOpen = !NavMenuOpen" OnThemeToggle="ChangeTheme" IsDarkMode="IsDarkMode" />
    <NavMenu Open="NavMenuOpen" />
    <MudMainContent>
        <MudContainer>
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<MudAlert Severity="Severity.Error" Variant="Variant.Filled" Square id="blazor-error-ui">
    <MudStack Row Spacing="1">
        <MudText>@Localizer["UnhandledError"]</MudText>
        <MudLink Href="">@Localizer["Refresh"]</MudLink>
    </MudStack>
</MudAlert>

@code {
    private MudTheme Theme = new MudTheme
    {
        Typography = new Typography
        {
            Body1 = new Body1Typography
            {
                FontWeight = "700"
            },
            Default = new DefaultTypography
            {
                FontFamily = new[] { "Quicksand" },
                FontWeight = "700"
            },
            H1 = new H1Typography
            {
                FontWeight = "700"
            },
            H5 = new H5Typography
            {
                FontWeight = "700"
            },
        }
    };

    private bool IsDarkMode { get; set; }
    private bool NavMenuOpen { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await GetThemePreference();
    }

    private async Task ChangeTheme(bool isDarkMode)
    {
        IsDarkMode = isDarkMode;
        await CookieService.SetAsync("DarkMode", IsDarkMode.ToString(), new DateTimeOffset(DateTime.MaxValue));
    }

    private async Task GetThemePreference()
    {
        var cookie = await CookieService.GetAsync("DarkMode");
        IsDarkMode = cookie != null ? bool.Parse(cookie.Value) : false;
    }
}